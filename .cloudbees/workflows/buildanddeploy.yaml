apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Flag_deployement
on:
  push:
    branches:
      - master
jobs:
  Build:
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: docker://maven:3-eclipse-temurin-17
        name: Build
        kind: build
        run: |
          mvn spring-javaformat:apply
          mvn clean install
        shell: sh
      - name: Get Commit Info
        uses: docker://alpine/git:latest
        id: commitinfo
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit ID: $COMMIT_ID"
          echo "Commit Message: $COMMIT_MSG"
          # Extract the JIRA issue key (assuming format like PROJECTKEY-123)
          JIRA_KEY=$(echo "$COMMIT_MSG" | grep -oE "[A-Z]+-[0-9]+")
          if [ -z "$JIRA_KEY" ]; then
            echo "Error: Commit message must include a valid JIRA issue key." >&2
            exit 1
          fi
          echo "${COMMIT_ID}" >> $CLOUDBEES_OUTPUTS/commit_id
          echo "${COMMIT_MSG}" >> $CLOUDBEES_OUTPUTS/commit_msg
          echo "${JIRA_KEY}" >> $CLOUDBEES_OUTPUTS/jira_key
      - name: SonarQube analysis
        uses: docker://sonarsource/sonar-scanner-cli:latest
        run: |+
          sonar-scanner \
            -Dsonar.projectKey=CBDEMO-sample  \
            -Dsonar.sources=.\
            -Dsonar.java.binaries=/cloudbees/workspace/target/classes \
            -Dsonar.host.url=${{ secrets.SONARQUBE_SERVER_URL }}  \
            -Dsonar.login=dc6079213b40e88694dbada6c82f34404b4df6fd
            
      - name: Verify Dockerfile location
        uses: docker://maven:3-eclipse-temurin-17
        run: ls -al ./
      - name: Configure container registry credentials
        id: dockerconfig
        uses: cloudbees-io/configure-oci-credentials@v1
        with:
          registry: ${{ secrets.dockerurl }}
          username: ${{ secrets.dockerusername }}
          password: ${{ secrets.dockerpasswd }}
      - name: Push image to OCI registry
        uses: cloudbees-io/kaniko@v1
        with:
          dockerfile: Dockerfile
          context: .
          destination: ${{ secrets.dockerurl }}/${{ secrets.dockerusername }}/petclinic:3.2.4
  StaticAnalysis:
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - name: Scan with SonarQube bundled
        uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v1
        with:
          sonar-exclusion: src/main/java
          cover-file-name: ./pom.xml
          language: LANGUAGE_JAVA
  Deploy:
    environment: production
    steps:
      - name: Checkout
        uses: cloudbees-io/checkout@v1
      - uses: cashokannamalai/kubeconfig@v1
        name: Set kubeconfig
        with:
          secname: ${{ secrets.kubeconfig }}
      - uses: cloudbees-io/kustomize-deploy@v1
        name: deploy
        kind: deploy
        with:
          kustomization-base-dir: ${{ cloudbees.workspace }}/base
    needs: Build
  Naveen:
    timeout-minutes: 4320
    delegates: cloudbees-io/manual-approval/custom-job.yml@v1
    with:
      approvers: ""
      disallowLaunchByUser: false
      notifyAllEligibleUsers: false
      instructions: ""
    